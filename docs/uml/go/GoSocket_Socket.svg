<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="653px" preserveAspectRatio="none" style="width:467px;height:653px;" version="1.1" viewBox="0 0 467 653" width="467px" zoomAndPan="magnify"><defs><filter height="300%" id="fywz054anj1cy" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><ellipse cx="230.5" cy="18" fill="#000000" filter="url(#fywz054anj1cy)" rx="10" ry="10" style="stroke: none; stroke-width: 1.0;"/><rect fill="#FEFECE" filter="url(#fywz054anj1cy)" height="526.6094" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="449" x="6" y="88"/><rect fill="#FFFFFF" height="493" rx="12.5" ry="12.5" style="stroke: #FFFFFF; stroke-width: 1.0;" width="443" x="9" y="118.6094"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6" x2="455" y1="115.6094" y2="115.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="43" x="209" y="107.5332">Socket</text><ellipse cx="219.5" cy="138.6094" fill="#000000" filter="url(#fywz054anj1cy)" rx="10" ry="10" style="stroke: none; stroke-width: 1.0;"/><rect fill="#FEFECE" filter="url(#fywz054anj1cy)" height="50" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="121" x="159" y="185.6094"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="159" x2="280" y1="213.2188" y2="213.2188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="101" x="169" y="205.1426">WaitForOpen_3</text><rect fill="#FEFECE" filter="url(#fywz054anj1cy)" height="294.2031" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="405" x="17" y="305.6094"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="17" x2="422" y1="333.2188" y2="333.2188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="61" x="189" y="325.1426">IsOpen_3</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="152" x="22" y="350.6758">entry / Socket!WasOpened()</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="0" x="25" y="365.7695"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="22" y="380.8633">out:Socket?Out /</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="22" y="395.957">action '</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="282" x="118" y="411.0508">_, err := ' &amp; SocketOut &amp; '.WriteString(' &amp; out.line &amp; '+"</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="8" x="22" y="426.1445">")</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="60" x="118" y="441.2383">if err != nil {</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="265" x="142" y="456.332">fmt.Fprint(os.Stderr, "Error writing to socket:", err)</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="142" y="471.4258">os.Exit(2)</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="4" x="118" y="486.5195">}</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="158" x="118" y="501.6133">err = ' &amp; SocketOut &amp; '.Flush()</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="60" x="118" y="516.707">if err != nil {</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="260" x="142" y="531.8008">fmt.Fprint(os.Stderr, "Error flushing socket:", err)</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="142" y="546.8945">os.Exit(2)</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="4" x="118" y="561.9883">}</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="2" x="94" y="577.082">'</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="0" x="25" y="592.1758"/><!--link WaitForOpen_3 to IsOpen_3--><path d="M219.5,235.9424 C219.5,252.3094 219.5,275.4154 219.5,300.4654 " fill="none" id="WaitForOpen_3-IsOpen_3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="219.5,305.5004,223.5,296.5004,219.5,300.5004,215.5,296.5004,219.5,305.5004" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="111" x="220.5" y="268.1045">open:Socket?Open</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="86" x="220.5" y="284.4561">action do...end</text><!--link *start*Socket to WaitForOpen_3--><path d="M219.5,148.7604 C219.5,156.7954 219.5,168.9354 219.5,180.2634 " fill="none" id="*start*Socket-WaitForOpen_3" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="219.5,185.3934,223.5,176.3934,219.5,180.3934,215.5,176.3934,219.5,185.3934" style="stroke: #A80036; stroke-width: 1.0;"/><!--link *start to Socket--><path d="M230.5,28.212 C230.5,38.951 230.5,58.348 230.5,82.498 " fill="none" id="*start-Socket" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="230.5,87.722,234.5,78.722,230.5,82.722,226.5,78.722,230.5,87.722" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="173" x="150" y="639.5332">Behavior of thing GoSocket</text><!--
@startuml
skinparam defaultTextAlignment left
caption Behavior of thing GoSocket
[*] - -> Socket
state Socket{
state WaitForOpen_3{

WaitForOpen_3 - -> IsOpen_3 : open:Socket?Open\naction do...end
}
state IsOpen_3{
	IsOpen_3 : entry / Socket!WasOpened()\n
	IsOpen_3 : out:Socket?Out / \naction '\n				_, err := ' & SocketOut & '.WriteString(' & out.line & '+"\n")\n				if err != nil {\n					fmt.Fprint(os.Stderr, "Error writing to socket:", err)\n					os.Exit(2)\n				}\n				err = ' & SocketOut & '.Flush()\n				if err != nil {\n					fmt.Fprint(os.Stderr, "Error flushing socket:", err)\n					os.Exit(2)\n				}\n			'\n
}
[*] - -> WaitForOpen_3
}
@enduml

PlantUML version 1.2017.15(Mon Jul 03 18:45:34 CEST 2017)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 1.8.0_151-b12
Operating System: Windows 10
OS Version: 10.0
Default Encoding: Cp1252
Language: en
Country: GB
--></g></svg>